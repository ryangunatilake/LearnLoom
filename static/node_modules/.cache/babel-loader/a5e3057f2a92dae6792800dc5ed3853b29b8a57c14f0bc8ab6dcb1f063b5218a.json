{"ast":null,"code":"var _jsxFileName = \"/Users/RyanJocel/Desktop/SDGP/LearnLoom-main/src/Components/UploadVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../Styles/UploadVideo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const handleFileInput = event => {\n    const files = event.target.files;\n    setSelectedFiles(files);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('file', selectedFiles[i]);\n    }\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData,\n        onUploadProgress: event => {\n          const progress = Math.round(event.loaded * 100 / event.total);\n          setUploadProgress(progress);\n        }\n      });\n      if (response.ok) {\n        // Handle successful upload (e.g., display a success message)\n        console.log('Files uploaded successfully!');\n        setSelectedFiles([]);\n        setUploadProgress(0);\n      } else {\n        // Handle upload errors\n        console.error('Upload failed:', response.statusText);\n      }\n    } catch (error) {\n      // Handle network errors or other issues\n      console.error('Error uploading files:', error);\n    }\n  };\n  const handleClickBrowse = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-drop-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Drag & drop Recording or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClickBrowse,\n          children: \"Browse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this), \" Supported formats: MP3, MP4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        multiple: true,\n        onChange: handleFileInput,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Uploading - \", selectedFiles.length, \" files\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${uploadProgress}%`\n        },\n        children: [uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-buttonn\",\n      onClick: handleUpload,\n      disabled: selectedFiles.length === 0,\n      children: \"UPLOAD RECORDING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadVideo, \"Mz305P4ud1hMAoDRuZejffRh/sk=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","UploadVideo","_s","selectedFiles","setSelectedFiles","uploadProgress","setUploadProgress","fileInputRef","handleFileInput","event","files","target","handleUpload","formData","FormData","i","length","append","response","fetch","method","body","onUploadProgress","progress","Math","round","loaded","total","ok","console","log","error","statusText","handleClickBrowse","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","ref","multiple","onChange","style","display","map","file","name","width","disabled","_c","$RefreshReg$"],"sources":["/Users/RyanJocel/Desktop/SDGP/LearnLoom-main/src/Components/UploadVideo.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport '../Styles/UploadVideo.css';\n\nconst UploadVideo = () => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n\n  const handleFileInput = (event) => {\n    const files = event.target.files;\n    setSelectedFiles(files);\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('file', selectedFiles[i]);\n    }\n\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData,\n        onUploadProgress: (event) => {\n          const progress = Math.round((event.loaded * 100) / event.total);\n          setUploadProgress(progress);\n        },\n      });\n\n      if (response.ok) {\n        // Handle successful upload (e.g., display a success message)\n        console.log('Files uploaded successfully!');\n        setSelectedFiles([]);\n        setUploadProgress(0);\n      } else {\n        // Handle upload errors\n        console.error('Upload failed:', response.statusText);\n      }\n    } catch (error) {\n      // Handle network errors or other issues\n      console.error('Error uploading files:', error);\n    }\n  };\n\n  const handleClickBrowse = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h2>Upload</h2>\n      <div className=\"drag-drop-area\">\n        <p>Drag & drop Recording or <button onClick={handleClickBrowse}>Browse</button></p>\n        <p> <br /> <br /> Supported formats: MP3, MP4</p>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          multiple\n          onChange={handleFileInput}\n          style={{ display: 'none' }}\n        />\n      </div>\n      \n      {selectedFiles.length > 0 && (\n        <div className=\"file-list\">\n          <h4>Uploading - {selectedFiles.length} files</h4>\n          <ul>\n            {selectedFiles.map((file) => (\n              <li key={file.name}>{file.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {uploadProgress > 0 && (\n        <div className=\"progress-bar-container\">\n          <div className=\"progress-bar\" style={{ width: `${uploadProgress}%` }}>\n            {uploadProgress}%\n          </div>\n        </div>\n      )}\n      <button className=\"upload-buttonn\" onClick={handleUpload} disabled={selectedFiles.length === 0}>\n        UPLOAD RECORDING\n      </button>\n    </div>\n  );\n};\n\nexport default UploadVideo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}