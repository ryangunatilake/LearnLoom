{"ast":null,"code":"var _jsxFileName = \"/Users/RyanJocel/Desktop/SDGP/LearnLoom-main/src/Components/ProjectSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/ProjectSummary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialProjects = [{\n  lecture: 'Nelsa web development',\n  notes: 'Delayed',\n  flashcards: 'Completed',\n  quiz: 'Completed'\n}, {\n  lecture: 'Datascale AI app',\n  notes: 'On going',\n  flashcards: 'At risk',\n  quiz: 'Delayed'\n}\n// ... add more projects as needed\n];\nconst statuses = ['Delayed', 'On going', 'Completed', 'At risk'];\nfunction ProjectSummary() {\n  _s();\n  const [projects, setProjects] = useState(initialProjects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProjectSummary\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lecture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reviewed Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Flashcards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.lecture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: project.notes.toLowerCase(),\n              value: project.notes,\n              onChange: e => handleStatusChange(e, index, 'notes'),\n              children: statuses.map((status, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 48\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: project.flashcards.toLowerCase(),\n              value: project.flashcards,\n              onChange: e => handleStatusChange(e, index, 'flashcards'),\n              children: statuses.map((status, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 48\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: project.quiz.toLowerCase(),\n              value: project.quiz,\n              onChange: e => handleStatusChange(e, index, 'quiz'),\n              children: statuses.map((status, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 48\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  function handleStatusChange(e, projectIndex, task) {\n    const newProjects = [...projects];\n    newProjects[projectIndex][task] = e.target.value;\n    setProjects(newProjects);\n  }\n}\n_s(ProjectSummary, \"SD0mvus/WlvMdxF00jmx9rjhe/A=\");\n_c = ProjectSummary;\nexport default ProjectSummary;\nvar _c;\n$RefreshReg$(_c, \"ProjectSummary\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialProjects","lecture","notes","flashcards","quiz","statuses","ProjectSummary","_s","projects","setProjects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","toLowerCase","value","onChange","e","handleStatusChange","status","i","projectIndex","task","newProjects","target","_c","$RefreshReg$"],"sources":["/Users/RyanJocel/Desktop/SDGP/LearnLoom-main/src/Components/ProjectSummary.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../Styles/ProjectSummary.css';\n\nconst initialProjects = [\n  { lecture: 'Nelsa web development', notes: 'Delayed', flashcards: 'Completed', quiz: 'Completed' },\n  { lecture: 'Datascale AI app', notes: 'On going', flashcards: 'At risk', quiz: 'Delayed' },\n  // ... add more projects as needed\n];\n\nconst statuses = ['Delayed', 'On going', 'Completed', 'At risk'];\n\nfunction ProjectSummary() {\n  const [projects, setProjects] = useState(initialProjects);\n\n  return (\n    <div className=\"ProjectSummary\">\n      <table>\n        <thead>\n          <tr>\n            <th>Lecture</th>\n            <th>Reviewed Notes</th>\n            <th>Flashcards</th>\n            <th>Quiz</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projects.map((project, index) => (\n            <tr key={index}>\n              <td>{project.lecture}</td>\n              <td>\n                <select className={project.notes.toLowerCase()} value={project.notes} onChange={(e) => handleStatusChange(e, index, 'notes')}>\n                  {statuses.map((status, i) => <option key={i} value={status}>{status}</option>)}\n                </select>\n              </td>\n              <td>\n                <select className={project.flashcards.toLowerCase()} value={project.flashcards} onChange={(e) => handleStatusChange(e, index, 'flashcards')}>\n                  {statuses.map((status, i) => <option key={i} value={status}>{status}</option>)}\n                </select>\n              </td>\n              <td>\n                <select className={project.quiz.toLowerCase()} value={project.quiz} onChange={(e) => handleStatusChange(e, index, 'quiz')}>\n                  {statuses.map((status, i) => <option key={i} value={status}>{status}</option>)}\n                </select>\n              </td>\n            </tr> \n          ))}\n        </tbody> \n      </table> \n    </div> \n  );\n\n  function handleStatusChange(e, projectIndex, task) {\n    const newProjects = [...projects];\n    newProjects[projectIndex][task] = e.target.value;\n    setProjects(newProjects);\n  }\n}\n\nexport default ProjectSummary;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}