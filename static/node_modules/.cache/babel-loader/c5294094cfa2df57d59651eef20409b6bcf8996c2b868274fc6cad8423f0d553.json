{"ast":null,"code":"var _jsxFileName = \"/Users/RyanJocel/Desktop/SDGP/LearnLoom-main/src/Components/UploadVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileSelect\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (!file.type.includes('audio/') && !file.type.includes('video/')) {\n      alert('Invalid file type. Please select an MP3 or MP4 file.');\n      return;\n    }\n    setSelectedFile(file);\n    onFileSelect(file); // Pass the selected file to the parent component\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    handleFileChange({\n      target: {\n        files: [file]\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected file: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size: \", (selectedFile.size / 1024 / 1024).toFixed(2), \" MB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop your MP3 or MP4 recording here or click to browse.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".mp3,.mp4\",\n        onChange: handleFileChange,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","onFileSelect","_s","selectedFile","setSelectedFile","handleFileChange","event","file","target","files","type","includes","alert","handleDragOver","preventDefault","handleDrop","dataTransfer","className","children","onDragOver","onDrop","name","fileName","_jsxFileName","lineNumber","columnNumber","size","toFixed","accept","onChange","hidden","_c","$RefreshReg$"],"sources":["/Users/RyanJocel/Desktop/SDGP/LearnLoom-main/src/Components/UploadVideo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../Styles/FileUpload.css';\n\nconst FileUpload = ({ onFileSelect }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (!file.type.includes('audio/') && !file.type.includes('video/')) {\n      alert('Invalid file type. Please select an MP3 or MP4 file.');\n      return;\n    }\n\n    setSelectedFile(file);\n    onFileSelect(file); // Pass the selected file to the parent component\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    handleFileChange({ target: { files: [file] } });\n  };\n\n  return (\n    <div className=\"file-upload\">\n      <div className=\"dropzone\" onDragOver={handleDragOver} onDrop={handleDrop}>\n        {selectedFile ? (\n          <div className=\"file-info\">\n            <p>Selected file: {selectedFile.name}</p>\n            <p>Type: {selectedFile.type}</p>\n            <p>Size: {(selectedFile.size / 1024 / 1024).toFixed(2)} MB</p>\n          </div>\n        ) : (\n          <p>\n            Drag and drop your MP3 or MP4 recording here or click to browse.\n          </p>\n        )}\n        <input type=\"file\" accept=\".mp3,.mp4\" onChange={handleFileChange} hidden />\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}